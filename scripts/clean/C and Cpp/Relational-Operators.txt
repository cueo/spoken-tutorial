Welcome spoken tutorial Relational Operators C C++. In tutorial, learn about: Relational operators like, Less than: e.g. < b Greater than: e.g. > b Less equal to: e.g. <= b Greater equal to: e.g. >= b Equal to: e.g. == b Not equal to: e.g. != b To record tutorial, I using: Ubuntu 11.10 operating system, gcc g++ Compiler version 4.6.1 Ubuntu. Let us begin introduction. Relational operators used compare integer floating point numbers. Expressions using relational operators return 0 false 1 true. Now I demonstrate relational operators help C program. I already made program. So, I'll open editor explain code. First, declare two variables b. This printf statement prompts user enter values b. This scanf statement takes input variables b. Now greater (>) operator. This operator compares two operands either side operator. It returns True greater b. This printf statement executed condition true. If condition false skipped. The control jumps next statement. We less (<) operator. This compares operands. It returns true less b. This printf statement executed condition true. It skipped otherwise. Let's execute code till here. First comment following. Type /* (slash asterisk) */ (asterisk slash). Click Save. I saved file relational.c. Open terminal window pressing Ctrl, Alt T keys simultaneously. To compile, type following terminal gcc space relational dot c space -o space rel. Press Enter. To execute, type ./rel (dot slash rel). Press Enter. I enter 8 b 3. The output displayed: 8 greater 3. You try executing code different values b. Coming back code. Delete comment put here. Now less equal (<=) operator. This operator compares two operands either side operator. It returns true less equal b. This printf statement executed condition true. If condition false skipped. The control jumps next statement. Next comes greater equal (>=) operator. It compares b returns true greater equal b. If condition true printf statement executed. Now let's execute code till here. Click Save. Switch back terminal. Compile execute before. I enter 8 b 3. The output displayed: 8 greater equal 3 Now Coming back rest code. Delete multiline comments here. We equal operator. It denoted double equal signs (==). This operator returns true operands equal one another. This printf statement executes equal b. If not, control jumps next statement. Similarly, equal operator. This operator returns true operands equal one another. This printf statement execute equal b. Coming end program. return 0; Click Save. Switch back terminal. Compile execute before. Enter 8 b 3. The output displayed screen: 8 equal 3 So, see relational operators work. Try executing code different set inputs. Now, writing similar program C++ quite easy. There differences syntax. I already made code C++. Here code relational operators C++. Notice header different. Also using statement here. The output statement C++ cout. And input statement C++ cin. So, apart differences, two codes similar. Click Save. Please make sure file saved extension .cpp. I saved file relational.cpp. Let's compile code. Open terminal type g++ relational.cpp space minus o space rel1 To execute, type ./rel1 (dot slash rel1), press Enter. I enter 8 b 3. The output displayed: We see output one C program. Now let us see error come across. Come back program. Suppose replace 'double equal to' sign 'single equal to'. Click Save. Come back terminal. Compile execute before. Here see showing 3 equal 3. Come back program. This assignment operator. So value b assigned a. Now, let us fix error. Type equal sign. Click Save. Switch back terminal. Compile execute before. The output correct. Let's summarize tutorial. In tutorial, learnt relational operators like: Less than: e.g. < b Greater than: e.g. a>b Less equal to: e.g. a<=b Greater equal to: e.g. a>=b Equal to: e.g. a==b Not equal to: e.g. a!=b As assignment: Write program takes marks three students input. Compare marks see student scored highest. Check also two students scored equal marks. Watch video available following link. It summarizes Spoken Tutorial project. If good bandwidth, download watch it. The Spoken Tutorial Project Team: Conducts workshops using spoken tutorials. Gives certificates pass online test. For details, please write contact spoken hyphen tutorial dot org. Spoken Tutorial Project part Talk Teacher project. It supported National Mission Education ICT, MHRD, Government India. More information Mission available spoken hyphen tutorial dot org slash NMEICT hyphen Intro. This Ritwik Joshi IIT Bombay. Thank joining.