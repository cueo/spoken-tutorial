Dear friends, welcome spoken tutorial Conditional execution Bash. In tutorial, learn: * Use test command * Conditional statements. We using examples. To follow tutorial, You familiar GNU/Linux Operating System. If not, relevant tutorials, please visit website shown. For tutorial, I using: * Ubuntu Linux 12.04 OS * GNU Bash version 4.1.10 GNU Bash version 4 recommended practice. Let us start introduction test. test built-in command returns exit status. It returns 0 (zero) True 1 (one) False. Return value depends evaluation expression. One get return status typing Dollar question mark sign ($?). An expression evaluated two ways- One- using keyword test. And using expression enclosed within square brackets. Now, open terminal pressing Ctrl+Alt T keys simultaneously. Type: test space 4 space hyphen eq space 4 semicolon space echo space dollar sign question mark. Press Enter. It returns zero means True. 4 equal 4. Next, type: opening square bracket space 4 space hyphen eq space 4 space closing square bracket semicolon space echo space dollar sign question mark. Press Enter. It returns zero means True. i.e.4 equal 4. Let's take another expression. Type: test space 4 space hyphen eq space 5 semicolon space echo space dollar sign question mark. Press Enter. It returns one means False. i.e.4 equal 5. Now let's write expression within square brackets. Type: opening square bracket space 4 space hyphen eq space 5 space closing square bracket semicolon space echo space dollar sign question mark. Press Enter. It also returns one means False. i.e. 4 equal 5. This extended kind testing. Please type: man space test explore usage. Now, let us go back slides. Now see syntax statement- space opening square bracket space expression space closing square bracket semicolon space On next line, type: commands statements want execute. Lastly, end loop fi. The basic rules condition are: * Always keep spaces brackets expression. * Always terminate line using semicolon keyword “then”. * Semicolon used terminate statement expression. It recommended quote string variables use condition. Don't forget close conditional block “fi”. Let us see example statement. Come back terminal. I open already existing script file named simpleif.sh. This Bash script displays message “count 100” count equals 100. This first line Bash shell script known shebang line. An integer 100 assigned variable count. Note space count, = 100. This expression checks whether count equal hundred. Here, -eq comparison operator. If condition True, display message count 100. fi end block. Now save file pressing Ctrl + S. Go back Terminal. To make file executable, type: chmod space plus x space simpleif.sh press Enter. Let clear prompt. Now type: dot slash simpleif.sh press Enter. Here displayed: Count 100. Try changing value variable count execute script. Now switch back slides. We see if-else condition. The general syntax is: space opening square bracket space condition space closing square bracket space semicolon space On next line, type commands. On next line, else statement. And type commands. next line, type fi end block. Let us study usage if-else interesting password program. Come back terminal. I open file ifelse.sh. This shebang line. Here,abc123 stored variable PASS. As abc123 string, written within double-quotes. The read command reads one line data standard input. In case, standard input keyboard. Hyphen silent mode means entered password displayed type. We don't want others see password. Hyphen p prompt. It display string “'Enter password: ” takes input user. mypassword variable. It stores string, case password entered user. This checks entered password matches value variable PASS. It stored variable mypassword. If password matches, displays message: “Password accepted” else display “Access denied”. fi end if-else loop. Now save file pressing Ctrl, s. Come back terminal, make file executable. Type: chmod space plus x space ifelse.sh. Press Enter. Type: dot slash ifelse.sh . Press Enter. Here displayed : Enter password: I type abc. Press Enter. As password entered wrong, displays message “Access denied”. Let's execute time enter password abc123. It displayed as: Password accepted. This brings us end tutorial. Come back slides summarize. In tutorial, covered usage test command, simple statement if-else statement. As assignment- Write script, take name input. It check name system's username. If username matches, greet displaying “Hello”. Else, display “Try again”. HINT: Your system's username stored variable $USER. Watch video available link shown below. It summarizes Spoken Tutorial project. If good bandwidth, download watch it. The Spoken Tutorial Project team: * Conducts workshops using spoken tutorials. * Gives certificates pass online test. For details, please write contact@spoken-tutorial.org Spoken Tutorial project part "Talk Teacher" project. It supported National Mission Education ICT, MHRD, Government India. More information mission available link shown below. The script contributed FOSSEE spoken-tutorial team. This Ashwini IIT Bombay, signing off. Thank joining.