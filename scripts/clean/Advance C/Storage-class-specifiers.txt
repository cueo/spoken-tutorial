Welcome Spoken Tutorial Storage class specifiers. In tutorial, We learn about: Storage class specifiers auto keyword static keyword extern keyword register keyword, help example. For tutorial, I using: Ubuntu Operating system version 11.10 gcc Compiler version 4.6.1 Ubuntu. To follow tutorial, familiar C tutorials. If not, relevant tutorials, please visit website shown. I start introduction storage class specifiers. Specifiers tell compiler- * store variable * How store variable * What initial value variable * Life time variable. The Syntax is: storage_specifier data_type variable _name. Types storage class specifiers are: auto static extern register . Let us start auto keyword. auto keyword declares automatic variable. It local scope. Keywords initialized automatically. You explicitly initialize keywords declaring. Storage-space keywords CPU memory. Let us see example. I code file; let us go it. Note filename auto.c. We declared function “increment()”. This main() function. In main() function, increment() function called 4 times. Then return 0 statement. Let us see function definition. Here, declared variable auto int. It local scope. Then display value using printf. Value incremented here. Let us open terminal pressing Ctrl+Alt+T keys simultaneously keyboard. Type: gcc space auto.c space hyphen o space auto. Press Enter. Type: dot slash auto The output zero. Now come back program. Let us initialize auto variable main() function. I cut declaration initialization paste here.Click Save. Let us execute terminal. Press up-arrow key twice. Press Enter. We get error: "file-scope declaration specifies auto". This auto variable local function. We cannot initialize globally. Let us fix error. Come back program. Delete this; paste here. Click Save execute terminal. Press up-arrow key. Recall previous command. Press Enter. Type: dot slash auto. Press Enter. Yes, working! The output zero. This initialized value zero. Now, let us see static variable. Although studied static variable, previous tutorials, I explain briefly. 'static' variables initialized zero. They destroyed even program control exits block. Value variable persists different function calls. Storage-space CPU memory. Let us see example. I edit code file. Come back program. Press Ctrl + Shift + S keys simultaneously. Now, I change filename static. Click Save. Now, I change initialization variable static int equal zero Click Save. Let us see happens. Execute file terminal. Type: gcc space static.c space hyphen o space stat. Press Enter. Type: dot slash stat. Press Enter. The output displayed as: 0, 1, 2, 3 This static variables global variables. The scope static variable local function, defined in. They lose value function calls. Now, let us learn extern keyword. Scope extern variable throughout main program. Definition extern variable might anywhere C program. extern variables initialized zero, default. They accessed functions program. These stored CPU memory. Let us see example. I code file; let us go it. Note filename "extern.c". I initialized variable integer variable x 10. This main() function. In main() function, I declared extern integer variable y. Using printf statements, display values x y. This return statement. We initialize y 50 main() function close. Now, switch terminal let us see output. Type: gcc space extern.c space hyphen o space ext. Press Enter. Type: dot slash ext. Press Enter. The output displayed as: "The value x 10" "The value y 50" As studied, value extern keyword main program. We define anywhere program. Both statements justified. Now, let us move register keyword. register variables accessed faster normal variables. They stored register memory rather main memory. Limited number variables used since register size low. 16 bits, 32 bits 64 bits. Let us see example now. I code file. Let us go it. Note filename register.c Here, declared register integer variable. This variable directly stored register memory. This 'for' loop displays value 1 5. This display value i. Let us execute program see. On terminal, type: gcc space register.c space hyphen o space register Press Enter. Type: dot slash register. Press Enter. You see, output displayed as: Values stored register memory 1 2 3 4 5. This brings us end tutorial. Let us summarize. In tutorial, learnt- Storage class specifiers auto keyword static keyword extern keyword register keyword. As assignment, write program print sum first 5 numbers. Declare keywords auto static program. Watch video available link shown below. It summarizes Spoken Tutorial project. If good bandwidth, download watch it. The Spoken Tutorial project team: * Conducts workshops using spoken tutorials. Gives certificates pass online test.For details, please write contact@spoken-tutorial.org Spoken Tutorial project part Talk Teacher project. It supported National Mission Education ICT, MHRD, Government India. More information mission available link shown below:http://spoken-tutorial.org\NMEICT-Intro. This Ashwini Patil IIT Bombay, signing off. Thank joining.