Dear friends, welcome Spoken tutorial Logical Operators Bash. In tutorial, learn use of: * Logical AND Logical OR Logical NOT using examples. To follow tutorial, knowledge of: * if-else statement command line arguments quoting BASH. If not, relevant tutorials, please visit website shown. For tutorial, I using: * Ubuntu Linux 12.04 OS * GNU Bash version 4.1.10 GNU Bash version 4 recommended practice. Let us understand use Logical-operators. Logical operators mainly used control program flow. Logical operators help link two expressions conditions. They part if, control statements. Let's see syntax logical AND. Opening square-bracket space dollar symbol condition1 space closing square-bracket space ampersand ampersand space opening square-bracket space dollar symbol condition2 space closing square-bracket. Or use syntax- Opening square-bracket space dollar symbol condition1 space hyphen-a space dollar symbol condition2 space closing square-bracket. Logical AND returns True condition1 condition2 True. Let us see syntax Logical OR. Opening square-bracket space dollar symbol condition1 space closing square-bracket space vertical bar vertical bar space opening square-bracket space dollar symbol condition2 space closing square-bracket. Or use syntax- Opening square-bracket space dollar symbol condition1 space hyphen-o space dollar symbol condition2 space closing square-bracket. Logical OR returns True either condition1 condition2 True. Let us learn usage Logical OR Logical AND using example. I already typed code file named logical.sh. Open terminal pressing ctrl+alt keys simultaneously keyboard. Type: gedit space logical.sh space ampersand sign, press Enter. Now type code shown here, "logical.sh" file. Let explain code now. This shebang line. The read command reads one line data standard input. - (hyphen) p displays prompt. string variable stores text entered user, execution. The statement checks whether entered string empty. - (hyphen) z checks whether length string zero. Type: man space test terminal explore various string comparisons. The echo statement print message nothing entered. If string empty, program move first elif statement. Here, checks whether entered string contains words "raj" "jit". If yes, echoes message. Please note logical AND used here. Hence, message displayed conditions satisfied. If program move onto second elif statement. Here, checks whether entered string contains either "raj" "jit". If 'yes' displays message. Please note logical OR used here. The message displayed one conditions satisfied. Lastly, default else statement. When statements False statement executed. "fi" end multilevel if-else loop. Let us execute program. Switch back terminal. First make file executable typing- chmod space plus x space logical dot sh press Enter. Now type: dot slash logical.sh press Enter. The prompt displays "Enter word:" I enter "jitinraj" . The output is: "jitinraj contains words 'raj' 'jit' ". This means control passed second statement. And conditions satisfied, displays message. Now, let us execute script again. Press up-arrow key. Go ./logical.sh press Enter. The prompt displays "Enter word:" This time I enter "abhijit". The output displayed as: "abhijit contains word 'raj' 'jit'". Please try executing program different inputs observe output. Let's switch back slides. Let's look logical NOT operator. It inverts Boolean value expression means, returns True expression False returns False expression True. The syntax logical NOT operator is- Exclamation mark space expression opening square-bracket space exclamation mark space expression space closing square-bracket. Let us see example. I already typed code file. So, I go terminal type: gedit space logicalNOT dot sh space ampersand sign, press Enter. Now type code shown here, logicalNOT dot sh file. This shebang line already know. $1 first command line argument passed script. - (hyphen) f checks file exists name passed argument. So, return True file exists False exist. This NOT operator here, inverses returned value means, file name exists, condition True. But NOT operator inverse value False. And display message "FILE exist". Here, else statement, displays message FILE exists. "fi" marks end loop. Now , switch terminal. Let clear prompt. Let's create empty file name test.txt. Type : touch space test dot txt press Enter. Next, make script executable typing: chmod space plus x space logicalNOT dot sh press Enter. Now, type: dot slash logicalNOT dot sh space test dot txt press Enter. Our shell script check whether file exists. Our file test dot txt exists, hence value True. Then logical NOT inverse value return False. Because evaluation False, else statement evaluated. And message displayed -File 'test.txt' exists. Try executing program argument test1.txt. And observe control flow explained before. Come back slides. Let us summarize. In tutorial, learned usage of: logical AND logical OR logical NOT. As assignment, check whether file exists executable using logical operators explained tutorial. (Hint: man space test) Watch video available link shown below. It summarizes Spoken-Tutorial project. If good bandwidth, download watch it. The Spoken Tutorial Project team: * Conducts workshops using spoken tutorials. * Gives certificates pass online test. For details, please write contact@spoken-tutorial.org Spoken Tutorial Project part Talk Teacher project. It supported National Mission Education ICT, MHRD, Government India. More information mission available link shown below. The script contributed FOSSEE spoken-tutorial team. This Ashwini Patil IIT Bombay, signing off. Thank joining.