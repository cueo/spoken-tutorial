Welcome spoken tutorial Arithmetic Comparison BASH. In tutorial, learn: * equal (-eq) * equal (-ne) * less (-lt) * less equal (-le) * greater (-gt) * greater equal (-ge) commands. We help examples. For tutorial, I using: * Ubuntu Linux 12.04 Operating System *GNU BASH version 4.1.10 GNU Bash version 4 recommended practice. I already working example arithmetic operators. Let switch it. I named file example1.sh. Open file editor choice type code shown. You must familiar so, now. In program, check whether given file empty not. Let explain code. This shebang line. First all, “Enter filename” printed console. read command reads one line data standard input. This command enclosed within backticks. Backtick special meaning. Everything type backtick evaluated. cat command display content file. wc print newline, word byte counts file. - (hyphen) w print word count. What happen - First cat command read file. This input file piped sent wc command. So, statement counts words given file. The output stored variable x. This statement. - (hyphen) eq command checks whether word count equal zero. If condition True, print message "File zero words”. "fi" end first condition. Here another condition. Here, - (hyphen) ne command checks whether word count equal zero. If condition True, print “File so-and-so words”. $x (dollar x) give word count. This end 2nd condition. Save program file. Let us execute program. Open terminal. First let's create file list.txt. Type: touch list.txt. Now, let's add line file. Type: echo within double quotes “How you” double quotes greater sign list.txt. Now let's make script executable. Type: chmod plus x example1 dot sh Now, type: dot slash example1.sh "Enter filename:" displayed. Type: list.txt The output displayed as: "list.txt 3 words". Now let's learn another set operators. Let switch another file. This example2.sh . Please open file editor name "example2.sh". Now type code shown here, "example2.sh" file. Let explain code. This program check whether word count is- * greater less one * Between one hundred hundred. We shebang line here. read statement takes input filename user. Here, - (hyphen) c command used print byte counts. In statement, - (hyphen) lt command checks whether word count less one. If condition True print “No characters present file”. "fi" ends condition. The next statement contains nested statement. First, - (hyphen) gt command checks whether word count greater one. If 'yes' echo statement executed. There multiple conditions within statement. Here, if: - (hyphen) ge command checks whether word count greater equal one * - (hyphen) le command checks whether word count less equal hundred. If conditions satisfied prints: "Number characters ranges 1 100". Please note conditions True satisfy entire condition. This included ampersand in-between conditions. "fi" end statement. Then next statement evaluated. - (hyphen) gt command checks whether word count greater hundred. If condition satisfied, print "Number characters hundred". "fi" end statement. Here end 2nd statement. Now come back terminal. Let us execute program. chmod plus x example2 dot sh dot slash example2 dot sh Type list.txt . The output displayed "list.txt one character". "Number characters ranges one hundred". Now, add remove characters list.txt file. Then observe statement gets executed. This brings us end tutorial. Let us summarize. In tutorial learnt: equal equal less less equal greater greater equal commands. As assignment, write program demonstrate use equal operator. Hint: - (hyphen) ne. Watch video available link shown below. It summarizes Spoken-Tutorial project. If good bandwidth, download watch it. The Spoken Tutorial Project team: Conducts workshops using spoken tutorials. Gives certificates pass online test. For details, please write contact@spoken-tutorial.org Spoken Tutorial project part Talk Teacher project. It supported National Mission Education ICT, MHRD, Government India. More information mission available link shown below. The script contributed FOSSEE spoken-tutorial team. This Ashwini Patil IIT Bombay, signing off. Thank joining.